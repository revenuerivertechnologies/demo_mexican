#!/usr/bin/perl -w

# --------------------------------------------------------------------
# Module:  vt_openterm
# Description:  Script to contact a remote vt_main and request a
#   display.
# Author:  Bruce Alon King
# Created:  Fri Apr 23 09:55:53 2004
# --------------------------------------------------------------------


# ####################################################################
# INITIALIZATION AND GLOBAL VARIABLES
# ####################################################################
use strict;
use Getopt::Std;
use Socket;

my $host = ( $ARGV[0] && $ARGV[0] !~ /^-/ ) ? shift( @ARGV ) : "";

my $options = "cC:d:Dhn:p:P:r:t:T:u";
my %opts;
getopts( $options, \%opts );
ShowHelp() if ( $opts{'h'} );

my $openterm   = $opts{'c'} ? "closeterm" : "openterm";
my $cloneterm  = $opts{'C'} ? $opts{'C'} : "";
my $drawers    = $opts{'d'} || 0;
my $debug_mode = $opts{'D'} ? 1 : 0;
my $name       = $opts{'n'} || "";
my $port       = $opts{'p'} || 10001;
my $printer    = $opts{'P'} || "none";
my $remote     = $opts{'r'} || "localhost";
my $type       = $opts{'t'} || "normal";
my $prtmodel   = $opts{'T'} || "epson";
my $update     = $opts{'u'} ? 1 : 0;

if ( $host eq "" ) {
    $host = shift( @ARGV ) || ShowHelp();
}


# ####################################################################
# MAIN LOOP
# ####################################################################
if ( $name eq "" ) {
    if ( $host =~ /^\d+\.\d+\.\d+\.(\d+)/ ) {
        my $termnum = $1;
        $name = "Terminal$termnum";
    } else {
        ( $name ) = $host =~ /^:?([^:]+)/;
        $name = ucfirst( $name );
    }
    if ( $name eq "") {
        $name = "OpenTerm";
    }
}
print "Connecting to $host as $name...\n" if ( $debug_mode );
my $socket = Connect( $remote, $port );
my $message = "$openterm ";
if ( $cloneterm ) {
    $message = "cloneterm $cloneterm $host";
} elsif ( $openterm eq "openterm" ) {
    $message .= "$name $host ";
    $message .= ( $update ? "update " : "noupdate " );
    $message .= "$type $printer $prtmodel $drawers";
} else {
    $message .= "$host";
}
print "Sending: '$message'\n" if ( $debug_mode );
Send( $socket, $message );


# ####################################################################
# SUBROUTINES
# ####################################################################

sub ShowHelp {
    my ( $progname ) = $0 =~ m|/([^/]+)$|;
    print "Usage:  $progname [OPTIONS] <display address>\n";
    print "OPTIONS:\n";
    print "  -c                 Close the terminal instead of opening it\n";
    print "  -C                 Clone an already open terminal\n";
    print "  -d <number>        Number of drawers attached to terminal\n";
    print "  -D                 Enable debug mode\n";
    print "  -h                 Show this help screen\n";
    print "  -n <name>          Terminal name\n";
    print "  -p <port>          Remote port to connect to\n";
    print "  -P <printer>       Printer host\n";
    print "  -r <remote>        Remote host to connect to\n";
    print "  -t <type>          'kitchen' or 'normal'\n";
    print "  -T <printer type>  'epson', 'star', 'ithaca', or 'text'\n";
    print "\n";
    exit( 1 );
}

sub Connect {
    my ( $remote, $port ) = @_;
    my $iaddr;
    my $paddr;
    my $proto;

    if ( $port =~ /\D/ ) {
        $port = getservbyname( $port, 'tcp' );
    }
    if ( $remote =~ /[^0-9\.]/ ) {
        $iaddr = gethostbyname( $remote );
    } else {
        $iaddr = inet_aton( $remote );
    }

    $paddr = sockaddr_in( $port, $iaddr );
    $proto = getprotobyname( 'tcp' );
    socket( SOCK, PF_INET, SOCK_STREAM, $proto ) || die "socket $!";
    connect( SOCK, $paddr ) || die "connect $!";

    return( \*SOCK );
}

sub Send {
    my ( $socket, $message ) = @_;
    print $socket $message;
}
